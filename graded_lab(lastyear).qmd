---
title: "Graded_lab(dplyr_tidyr)"
author: "Kenza Redwane"
format: 
  html:
    code-fold: true
---

## Exercice 1

```{r}
#| message: false
#| cache: false
here::i_am("top-spotify-songs-from-20102019-by-year.csv")
library(here)
library(dplyr)
library(tidyr)
```
### Question 1: Load data
```{r}
library(readr)
spotify <- read_delim("/Users/macbookpro/Desktop/Master/Semester One/Data Management and Programming/dplyr_tidyr-graded.lab-/top-spotify-songs-from-20102019-by-year.csv",";")

```

### Question 2: Using distinct (among other functions) compute the number of different songs, artists and musical genre that have been included in the data set.
```{r}
spotify %>%summarise(songs=n_distinct(title),
                     artists=n_distinct(artist),
                     musical_genre=n_distinct(`top genre`))

```

### Question 3: number of songs per year
```{r}
spotify %>%
  group_by(year) %>%
  summarise(num_songs = n())
```

### Question 4:  most popular artist with largest number of songs in the data set (count each song only once)
```{r}
spotify %>% distinct(title, artist) %>%
  count(artist) %>%
  top_n(1, n)
```

### Question 5: Min,  Max, Mean, and Median bpm
```{r}
spotify %>% group_by(`top genre`) %>%
  summarise(min_bpm = min(bpm,max_bpm = max(bpm),
    mean_bpm = mean(bpm),
    median_bpm = median(bpm),
    num_songs = n()))

```

## Exercice 2

### Question 1: Load data 
```{r}
here::i_am("grades.csv")
library(here)
library(dplyr)
library(tidyr)
library(readr)
grades <- read_delim("grades.csv",";")
```
### Question 2: Compute Min, Max, Mean, Mediann
```{r}
grades %>%summarise(
    min_exam = min(Exam, na.rm = TRUE),
    max_exam = max(Exam, na.rm = TRUE),
    median_exam = median(Exam, na.rm = TRUE),
    mean_exam = mean(Exam, na.rm = TRUE)
  )

```
### Question 3: Extract the students who missed the Exam
```{r}
grades %>% 
  group_by(Group)%>%
  summarise(num_students = n())

```
### Question 4: Compute number of students in each Group
```{r}
grades %>%
  group_by(Group) %>%
  summarise(number_students= n())
```
### Question 5:Compute the number of students who missed the Exam in each Group
```{r}
grades %>%
  group_by(Group)%>%
  summarise(number_missed=sum(is.na(Exam)))
```
### Question 6: New data frame reshapped to a long format, keeping the Id and Group_by
```{r}
long_grades <- grades %>% 
  pivot_longer(-c(Id, Group))
long_grades %>% slice(1:5)
```

### Question 7: using long format, missing grades in total for each student
```{r}
long_grades %>%
  group_by(Id) %>%
  summarise(missing_count = sum(is.na(value)))

```

### Question 8: Using long format, same info as in question 5
```{r}
long_grades %>%
  filter(name == "Exam") %>%
  group_by(Group) %>%
  summarise(num_missed = sum(is.na(value)))

```

### Question 9:Using long format, compute the number of missing grades for online tests for each students
```{r}
library(stringr)
long_grades %>%
  filter(str_starts(name, "Online_MCQ_")) %>%
  group_by(Id) %>%
  summarise(online_missing_count = sum(is.na(value)))
```

### Question 10: Create table with 2 columns: Id and Missed
```{r}
grades %>%
  filter(str_starts(name, "MCQ")) %>%
  group_by(Id) %>%
  summarise(Missed = anyNA(value))
```

### Question 11: Create tablewith 2columns: Group andP_missed with the percentage
```{r}
grades %>%
  left_join(grades %>% select(Id, Group), by = "Id") %>%
  group_by(Group) %>%
  summarise(P_missed = mean(Missed) * 100)

```